{"version":3,"sources":["useStore/useStore.js","Components/State.js","Components/GameControls.js","Assets/Texture/neonGalaxy.jpg","Assets/Texture/DogecoinLogo.jfif","Components/SkyBox.js","Assets/Models/DogeShipV3.gltf","Components/Ship.js","Components/MapBoundary.js","Assets/Texture/blockchain.jpg","Components/Obstacles.js","Components/Hud.js","Assets/Texture/dogeBackgroundRevised.png","Assets/Texture/wasdKeys.png","Assets/Texture/arrowKeys.png","Components/Loading.js","Components/GameMenu.js","Assets/Texture/dogeCoinIcon.svg","Components/GameOver.js","Components/Terrain.js","Components/Bloom.js","Assets/Texture/doge_coin.png","Components/Coin.js","App.js","index.js"],"names":["useStore","create","set","get","gameScore","difficulty","gameOver","gameStart","displayCoin","speedIncreased","controlRef","left","right","up","down","directionalLight","createRef","directionalLight2","view","dogeShip","moon","increaseSpeed","speedIncrease","state","difficultyScale","isScore","setDisplayCoin","coin","isGameStart","start","isGameOver","over","storeVariable","gameSpeed","coinCount","coinValue","setSpeed","horizontalV","verticalV","nextLevel","cubeSpeed","currentDifficulty","State","useEffect","useFrame","delta","deltaV","current","Math","abs","position","z","keypress","useKeys","target","event","downHandler","e","indexOf","key","setRepeat","keyCode","upHandler","window","addEventListener","passive","removeEventListener","GameControls","Space","spaceTexture","useTexture","backgroundTexture","space","useRef","stars","s","useLayoutEffect","wrapS","wrapT","MirroredRepeatWrapping","repeat","anistropy","rotation","x","ref","PI","intensity","attach","args","emissive","emissiveIntensity","fog","side","BackSide","map","Stars","radius","depth","count","factor","saturation","fade","Moon","clock","useThree","moonTexture","dogeMoon","scale","sin","getElapsedTime","y","color","THREE","Fog","near","far","Skybox","fallback","vector","Vector3","DogeshipModel","props","useGLTF","dogeShipModel","nodes","materials","controlsRef","getState","subscribe","lookAt","time","SineOne","max","min","PerspectiveCamera","makeDefault","fov","dispose","geometry","Object_2001","material","Object_2001_1","Object_2001_2","Object_2001_3","Object_2001_4","Object_2001_5","Object_2001_6","Object_2001_7","Object_2001_8","Object_2001_9","Loading","visible","transparent","opacity","roughness","metalness","Ship","preload","WALL_RADIUS","LEFT_BOUND","MapBoundary","rightWall","leftWall","upWall","downWall","RIGHT_BOUND","DOWN_BOUND","UP_BOUND","PLANE_SIZE","CUBE_SIZE","randomInRange","from","to","floor","random","GenerateBlock","mesh","texture","blockTexture","initial","useMemo","Object3D","block","temp","i","push","forEach","b","shipDistance","p1x","p1y","p1z","p2x","p2y","p2z","a","c","sqrt","ThreeDistance","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","DoubleSide","getScore","toFixed","getSpeed","getCoinValue","Hud","useState","display","setDisplay","then","Date","now","scoreRef","currentScore","speedRef","currentSpeed","coinValueRef","currentCoinValue","addEffect","innerText","className","styles","alignItems","marginTop","justifyContent","transition","zIndex","width","height","textAlign","borderRadius","boxShadow","border","background","transformOrigin","fontSize","fontFamily","whiteSpace","textShadow","defaultDataInterpolation","p","Loader","active","progress","dataInterpolation","LoadingRef","React","rafRef","LoadedRef","updateProgress","requestAnimationFrame","cancelAnimationFrame","style","transform","GameMenu","opaque","setOpaque","hasLoaded","setHasLoaded","useProgress","controlInfo","setControlInfo","t","setTimeout","clearTimeout","src","dogeBackground","alt","onClick","wasdControls","arrowControls","GameOver","previousScores","localStorage","getItem","JSON","parse","Array","fill","postScores","setPostScores","some","compareScores","sort","descendingScores","setItem","stringify","location","reload","dogeCoin","MOVE_DISTANCE","Terrain","ground","groundTwo","planeTop","planeBot","planeLeft","planeRight","planeTwoTop","planeTwoBot","planeTwoLeft","planeTwoRight","moveCounter","lastMove","round","receiveShadow","wireframe","LoadingGround","TerrainGround","Effect","composer","scene","gl","size","camera","aspect","setSize","render","attachArray","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","FilmPass","negativeBound","positiveBound","GenerateCoin","coinTexture","Coin_SIZE","App","mode","dpr","Preload","all","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.626e60bb.chunk.js","sourcesContent":["import { createRef } from 'react'\nimport { Color } from 'three'\nimport create from 'zustand'\n\nconst useStore = create((set, get) => {\n    return {\n        set,\n        get,\n        gameScore: 0,\n        difficulty: 0,\n        gameOver: false,\n        gameStart: false,\n        displayCoin: false,\n        speedIncreased: false,\n        controlRef: { left: false, right: false, up: false, down: false, },\n        directionalLight: createRef(),\n        directionalLight2: createRef(),\n        view: createRef(),\n        dogeShip: createRef(),\n        moon: createRef(),\n        increaseSpeed: (speedIncrease) => set(state => ({ speedIncreased: speedIncrease })),\n        difficultyScale: () => set(state => ({ difficulty: state.difficulty + 1 })),\n        isScore: (gameScore) => set(state => ({ gameScore: gameScore })),\n        setDisplayCoin: (coin) => set(state => ({ displayCoin: coin })),\n        isGameStart: (start) => set(state => ({ gameStart: start })),\n        isGameOver: (over) => set(state => ({ gameOver: over })),\n    }\n})\n\nconst storeVariable = {\n    gameOver: false,\n    gameSpeed: 0.0,\n    gameScore: 0,\n    coinCount: 1,\n    coinValue: 0,\n    setSpeed: 0.0,\n    horizontalV: 0,\n    verticalV: 0,\n    nextLevel: 0,\n    cubeSpeed: 0.8,\n    currentDifficulty: 0,\n}\n\nexport { useStore, storeVariable }\n","import { useEffect } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\n\nimport { useStore, storeVariable } from '../useStore/useStore'\n\nconst STARTING_GAME_SPEED = 0.8\n\nexport default function State() {\n    const dogeShip = useStore(state => state.dogeShip)\n    const gameStart = useStore(state => state.gameStart)\n    const isScore = useStore(state => state.isScore)\n    const increaseSpeed = useStore(state => state.increaseSpeed)\n    const isGameOver = useStore(state => state.isGameOver)\n\n    useEffect(() => {\n        if (gameStart) {\n            storeVariable.setSpeed = STARTING_GAME_SPEED\n        }\n    }, [gameStart])\n\n    useFrame((state, delta) => {\n\n        //acceleration\n        const deltaV = 1 * delta * 0.15\n        if (gameStart && !storeVariable.gameOver) {\n            if (storeVariable.gameSpeed < storeVariable.setSpeed) {\n                increaseSpeed(true)\n                if (storeVariable.gameSpeed + deltaV > storeVariable.setSpeed) {\n                    storeVariable.gameSpeed = storeVariable.setSpeed\n                } else {\n                    storeVariable.gameSpeed += deltaV\n                }\n            } else {\n                increaseSpeed(false)\n            }\n        }\n\n        if (dogeShip.current) {\n            storeVariable.gameScore = Math.abs(dogeShip.current.position.z) + (storeVariable.coinCount) - 10\n        }\n\n        if (gameStart && storeVariable.gameOver) {\n            isScore(storeVariable.gameScore)\n            isGameOver(true)\n        }\n    })\n\n    return null\n}","import { useEffect } from 'react'\nimport { useStore } from '../useStore/useStore'\n\nconst keypress = []\n\nfunction useKeys(target, event, up = true) {\n    useEffect(() => {\n        const downHandler = (e) => {\n            if (target.indexOf(e.key) !== -1) {\n                const setRepeat = !!keypress[e.keyCode]\n                keypress[e.keyCode] = true\n                if (up || !setRepeat) event(true)\n            }\n        }\n\n        const upHandler = (e) => {\n            if (target.indexOf(e.key) !== -1) {\n                keypress[e.keyCode] = false\n                if (up) event(false)\n            }\n        }\n\n        window.addEventListener('keydown', downHandler, { passive: true })\n        window.addEventListener('keyup', upHandler, { passive: true })\n        return () => {\n            window.removeEventListener('keydown', downHandler)\n            window.removeEventListener('keyup', upHandler)\n        }\n    }, [target, event, up])\n}\n\n\nexport default function GameControls() {\n    const set = useStore((state) => state.set)\n    useKeys(['ArrowLeft', 'a', 'A'], (left) => set((state) => ({ ...state, controlRef: { ...state.controlRef, left } })))\n    useKeys(['ArrowRight', 'd', 'D'], (right) => set((state) => ({ ...state, controlRef: { ...state.controlRef, right } })))\n    useKeys(['ArrowUp', 'w', 'W'], (up) => set((state) => ({ ...state, controlRef: { ...state.controlRef, up } })))\n    useKeys(['ArrowDown', 's', 'S'], (down) => set((state) => ({ ...state, controlRef: { ...state.controlRef, down } })))\n    return null\n}","export default __webpack_public_path__ + \"static/media/neonGalaxy.dfe2f1ec.jpg\";","export default __webpack_public_path__ + \"static/media/DogecoinLogo.c74676b5.jfif\";","import { Suspense, useRef, useLayoutEffect, useMemo, useEffect } from 'react'\nimport { useThree, useFrame, extend } from '@react-three/fiber'\nimport { useTexture, Stars } from '@react-three/drei'\nimport * as THREE from 'three'\nimport { BackSide, MirroredRepeatWrapping } from 'three'\n\nimport backgroundTexture from '../Assets/Texture/neonGalaxy.jpg'\nimport dogeMoon from '../Assets/Texture/DogecoinLogo.jfif'\n\nimport { storeVariable, useStore } from '../useStore/useStore'\n\n\n\nfunction Space() {\n    const spaceTexture = useTexture(backgroundTexture)\n    const space = useRef()\n    const stars = useRef()\n\n    const dogeShip = useStore((s) => s.dogeShip)\n\n    useLayoutEffect(() => {\n        spaceTexture.wrapS = spaceTexture.wrapT = MirroredRepeatWrapping\n        spaceTexture.repeat.set(1.8, 1.8)\n        spaceTexture.anistropy = 16\n    }, [spaceTexture])\n\n    useFrame((state, delta) => {\n        space.current.rotation.z += delta * 0.02 * storeVariable.gameSpeed\n        stars.current.rotation.z += delta * 0.02 * storeVariable.gameSpeed\n\n        if (dogeShip.current) {\n            space.current.position.x = dogeShip.current.position.x\n            stars.current.position.x = dogeShip.current.position.x\n            space.current.position.z = dogeShip.current.position.z\n            stars.current.position.z = dogeShip.current.position.z\n        }\n    })\n\n    return (\n        <>\n            <mesh ref={space} position={[0, 10, -50]} rotation={[0, 0, Math.PI]}>\n                <hemisphereLight intensity={0.4} />\n                <sphereGeometry\n                    attach='geometry'\n                    args={[2000, 10, 10]}\n                />\n                <meshPhongMaterial\n                    emissive={'red'}\n                    emissiveIntensity={0.1}\n                    fog={false}\n                    side={BackSide}\n                    attach='material'\n                    map={spaceTexture}\n                />\n            </mesh>\n            <Stars\n                ref={stars}\n                radius={800}\n                depth={100}\n                count={10000}\n                factor={40}\n                saturation={1}\n                fade\n            />\n        </>\n    )\n}\n\n\n\nfunction Moon() {\n    const { clock } = useThree()\n\n    const moon = useStore((s) => s.moon)\n    const dogeShip = useStore((s) => s.dogeShip)\n    const moonTexture = useTexture(dogeMoon)\n\n    useLayoutEffect(() => {\n        moonTexture.wrapS = moonTexture.wrapT = MirroredRepeatWrapping\n        moonTexture.repeat.set(1, 1.2)\n        moonTexture.anistropy = 16\n        moonTexture.rotation = 0.35\n    }, [moonTexture])\n\n    useFrame((state, delta) => {\n        if (dogeShip.current) {\n            moon.current.position.z = dogeShip.current.position.z - 1700\n            moon.current.position.x = dogeShip.current.position.x\n        }\n\n        moon.current.scale.x += Math.sin(clock.getElapsedTime() * 3) / 3000\n        moon.current.scale.y += Math.sin(clock.getElapsedTime() * 3) / 3000\n    })\n\n    return (\n        <mesh ref={moon} position={[0, 500, -2000]}>\n            <sphereGeometry\n                attach=\"geometry\"\n                args={[500, 30, 30]} />\n            <meshStandardMaterial\n                fog={false}\n                emissive={'#fa26a0'}\n                emissiveIntensity={0.8}\n                attach=\"material\"\n                map={moonTexture}\n                color={new THREE.Color('#e1b303')}\n            />\n        </mesh>\n    )\n}\n\nfunction Fog() {\n    const fog = useRef()\n\n    useFrame((state, delta) => {\n        fog.current.near = 500\n        fog.current.far = 800\n    })\n\n    return (\n        <fog ref={fog} attach=\"fog\" args={['#5aaccc', 500, 800]} />\n    )\n}\n\n\nexport default function Skybox() {\n\n    return (\n        <Suspense fallback={null}>\n            <Moon />\n            <Space />\n            <Fog />\n        </Suspense>\n    )\n}","export default __webpack_public_path__ + \"static/media/DogeShipV3.cc7a3b48.gltf\";","import React, { useRef, useLayoutEffect, useEffect, Suspense } from 'react'\nimport { useFrame, useThree } from '@react-three/fiber'\nimport { useGLTF, PerspectiveCamera } from '@react-three/drei'\nimport { Vector3 } from 'three'\nimport { useStore, storeVariable } from '../useStore/useStore'\n\nimport dogeShipModel from '../Assets/Models/DogeShipV3.gltf'\n\nconst vector = new Vector3()\n\nfunction DogeshipModel(props) {\n    const { nodes, materials } = useGLTF(dogeShipModel)\n\n    const view = useStore((state) => state.view)\n    const dogeShip = useStore((state) => state.dogeShip)\n\n    const { clock } = useThree()\n\n    const controlsRef = useRef(useStore.getState().controlRef)\n\n    useEffect(() => useStore.subscribe(\n        controlRef => (controlsRef.current = controlRef),\n        state => state.controlRef\n    ), [])\n\n    useLayoutEffect(() => {\n        dogeShip.current.position.set(0, 150, 0)\n        view.current.rotation.set(0, Math.PI, 0)\n        view.current.position.set(0, 154, -9)\n        view.current.lookAt(vector.set(\n            dogeShip.current.position.x,\n            dogeShip.current.position.y,\n            dogeShip.current.position.z\n            + 20))\n\n        view.current.rotation.z = Math.PI\n        dogeShip.current.rotation.y = Math.PI\n    }, [dogeShip, view])\n\n    useFrame((state, delta) => {\n        const deltaV = 1 * delta * 2\n        const time = clock.getElapsedTime()\n        const SineOne = Math.sin(time * 5)\n\n        const { left, right, up, down } = controlsRef.current\n\n\n        //Move forward\n        dogeShip.current.position.z -= storeVariable.gameSpeed * delta * 165\n        //Move Lateral\n        if (storeVariable.gameOver) {\n            storeVariable.horizontalV = 0\n        }\n        dogeShip.current.position.x += storeVariable.horizontalV * delta * 165\n\n        if (storeVariable.gameOver) {\n            storeVariable.verticalV = 0\n        }\n        //Move Up and down\n        dogeShip.current.position.y += storeVariable.verticalV * delta * 165\n\n        //ship curve when turning\n        dogeShip.current.rotation.z = storeVariable.horizontalV * 1.5\n        dogeShip.current.rotation.y = Math.PI - storeVariable.horizontalV * 0.4\n        dogeShip.current.rotation.x = Math.abs(storeVariable.horizontalV) / 10\n\n\n        //ship tilt when going up or down\n        dogeShip.current.rotation.x = Math.PI - Math.PI + (storeVariable.verticalV) * 0.4\n\n        //ship hovering\n        dogeShip.current.position.y -= SineOne / 250\n        dogeShip.current.rotation.x += SineOne / 100\n        dogeShip.current.rotation.z += Math.sin(time * 4) / 100\n\n        // camera\n        view.current.position.z = dogeShip.current.position.z + 13.5 //default is 13.5\n        view.current.position.y = dogeShip.current.position.y + 10 //default is 5\n        view.current.position.x = dogeShip.current.position.x\n        view.current.rotation.y = Math.PI\n\n        if ((left && right) || (!left && !right)) {\n            if (storeVariable.horizontalV < 0) {\n                if (storeVariable.horizontalV + deltaV > 0) {\n                    storeVariable.horizontalV = 0\n                } else {\n                    storeVariable.horizontalV += deltaV\n                }\n            }\n\n            if (storeVariable.horizontalV > 0) {\n                if (storeVariable.horizontalV - deltaV < 0) {\n                    storeVariable.horizontalV = 0\n                } else {\n                    storeVariable.horizontalV -= deltaV\n                }\n            }\n        }\n\n        // up and down \n        if ((up && down) || (!up && !down)) {\n            if (storeVariable.verticalV < 0) {\n                if (storeVariable.verticalV + deltaV > 0) {\n                    storeVariable.verticalV = 0\n                } else {\n                    storeVariable.verticalV += deltaV\n                }\n            }\n\n            if (storeVariable.verticalV > 0) {\n                if (storeVariable.verticalV - deltaV < 0) {\n                    storeVariable.verticalV = 0\n                } else {\n                    storeVariable.verticalV -= deltaV\n                }\n            }\n        }\n\n\n        // Turn Left & Right\n        if (!storeVariable.gameOver && storeVariable.gameSpeed > 0) {\n            if ((left && !right)) {\n                storeVariable.horizontalV = Math.max(-0.7, storeVariable.horizontalV - deltaV)\n            }\n\n            if ((!left && right)) {\n                storeVariable.horizontalV = Math.min(0.7, storeVariable.horizontalV + deltaV)\n            }\n        }\n        //Turn Up and Down+\n        if (!storeVariable.gameOver && storeVariable.gameSpeed > 0) {\n            if ((!up && down)) {\n                storeVariable.verticalV = Math.max(-0.7, storeVariable.verticalV - deltaV)\n            }\n\n            if ((up && !down)) {\n                storeVariable.verticalV = Math.min(0.7, storeVariable.verticalV + deltaV)\n            }\n        }\n\n    })\n\n    return (\n        <>\n            <PerspectiveCamera\n                makeDefault\n                ref={view}\n                fov={90}\n                rotation={[0, Math.PI, 0]}\n                position={[0, 50, -20]}\n            />\n            <group ref={dogeShip} {...props} dispose={null}>\n                <group position={[0, 5.13, 0]} rotation={[-1.7, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n                    <mesh geometry={nodes.Object_2001.geometry} material={materials['Material__27.001']} />\n                    <mesh geometry={nodes.Object_2001_1.geometry} material={materials['default.001']} />\n                    <mesh geometry={nodes.Object_2001_2.geometry} material={materials['default.002']} />\n                    <mesh geometry={nodes.Object_2001_3.geometry} material={materials['default.003']} />\n                    <mesh geometry={nodes.Object_2001_4.geometry} material={materials['Material__25.001']} />\n                    <mesh geometry={nodes.Object_2001_5.geometry} material={materials['Material__26.001']} />\n                    <mesh geometry={nodes.Object_2001_6.geometry} material={materials['Material__28.001']} />\n                    <mesh geometry={nodes.Object_2001_7.geometry} material={materials['Material__29.001']} />\n                    <mesh geometry={nodes.Object_2001_8.geometry} material={materials['Material__30.001']} />\n                    <mesh geometry={nodes.Object_2001_9.geometry} material={materials['Tex_0230_0_dds.001']} />\n                </group>\n            </group>\n        </>\n    )\n}\n\n\nuseGLTF.preload(dogeShipModel)\n\nfunction Loading() {\n    return (\n        <mesh visible position={[0, 0.87, 0]} rotation={[0, 0, 0]}>\n            <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />\n            <meshStandardMaterial\n                attach=\"material\"\n                color=\"black\"\n                transparent\n                opacity={1}\n                roughness={1}\n                metalness={0}\n            />\n        </mesh>\n    )\n}\n\nexport default function Ship() {\n\n    return (\n        <Suspense fallback={<Loading />}>\n            <DogeshipModel>\n\n            </DogeshipModel>\n        </Suspense>\n    )\n}\n","import { Cone } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport { useRef } from 'react'\n\n\nimport { useStore, storeVariable } from '../useStore/useStore'\n\nconst PLANE_SIZE = 1000\nconst WALL_RADIUS = 40\nconst LEFT_BOUND = (-PLANE_SIZE / 2) * 0.6\nconst RIGHT_BOUND = (PLANE_SIZE / 2) * 0.6\nconst UP_BOUND = 300\nconst DOWN_BOUND = -25\n\nexport default function MapBoundary() {\n    const dogeShip = useStore((s) => s.dogeShip)\n\n    const rightWall = useRef()\n    const leftWall = useRef()\n    const upWall = useRef()\n    const downWall = useRef()\n\n    //GOLD =#e1b303\n    //RED = #FF3131;\n    //BLUE = #1F51FF;\n\n    useFrame((state, delta) => {\n        if (dogeShip.current) {\n            rightWall.current.position.z = dogeShip.current.position.z\n            leftWall.current.position.z = dogeShip.current.position.z\n            upWall.current.position.z = dogeShip.current.position.z\n            downWall.current.position.z = dogeShip.current.position.z\n\n            if (dogeShip.current.position.x <= LEFT_BOUND + (WALL_RADIUS / 2) ||\n                dogeShip.current.position.x >= RIGHT_BOUND - (WALL_RADIUS / 2) ||\n                dogeShip.current.position.y <= DOWN_BOUND + (WALL_RADIUS / 2) ||\n                dogeShip.current.position.y >= UP_BOUND + (WALL_RADIUS / 2)) {\n\n                storeVariable.gameSpeed = 0\n                storeVariable.gameOver = true\n            }\n        }\n    })\n\n    return (\n        <>\n\n            <Cone args={[WALL_RADIUS, PLANE_SIZE * 2, 8]} position={[LEFT_BOUND, 0, -5]} rotation={[Math.PI / 2, 0, Math.PI]} ref={leftWall}>\n                <meshBasicMaterial attach=\"material\" color={'#FF3131'} visible={false} transparent={true} opacity={1} />\n            </Cone>\n            <Cone args={[WALL_RADIUS, PLANE_SIZE * 2, 8]} position={[RIGHT_BOUND, 0, -5]} rotation={[Math.PI / 2, 0, Math.PI]} ref={rightWall}>\n                <meshBasicMaterial attach=\"material\" color={'#FF3131'} visible={false} transparent={true} opacity={1} />\n            </Cone>\n            <Cone args={[WALL_RADIUS, PLANE_SIZE * 2, 8]} position={[RIGHT_BOUND, UP_BOUND, -5]} rotation={[Math.PI / 2, 0, Math.PI]} ref={downWall}>\n                <meshBasicMaterial attach=\"material\" color={'#FF3131'} visible={false} transparent={true} opacity={1} />\n            </Cone>\n            <Cone args={[WALL_RADIUS, PLANE_SIZE * 2, 8]} position={[LEFT_BOUND, UP_BOUND, -5]} rotation={[Math.PI / 2, 0, Math.PI]} ref={upWall}>\n                <meshBasicMaterial attach=\"material\" color={'#FF3131'} visible={false} transparent={true} opacity={1} />\n            </Cone>\n        </>\n    )\n}","export default __webpack_public_path__ + \"static/media/blockchain.7e60035b.jpg\";","import { DoubleSide, FrontSide, MirroredRepeatWrapping, Object3D } from 'three'\nimport { useRef, useMemo, useLayoutEffect } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport { useTexture } from '@react-three/drei'\n\nimport blockTexture from '../Assets/Texture/blockchain.jpg'\n\nimport { storeVariable, useStore } from '../useStore/useStore'\n\n\nconst PLANE_SIZE = 1000\nconst LEFT_BOUND = (-PLANE_SIZE / 2) * 0.6\nconst RIGHT_BOUND = (PLANE_SIZE / 2) * 0.6\nconst CUBE_SIZE = 25\n// 18\nconst OBJECT_COUNT = 400\n// 500\nconst WALL_RADIUS = 40\n\nconst randomInRange = (from, to) => Math.floor(Math.random() * (to - from + 1)) - to\n\nfunction ThreeDistance(p1x, p1y, p1z, p2x, p2y, p2z) {\n    const a = p2x - p1x;\n    const b = p2y - p1y;\n    const c = p2z - p1z\n\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\nconst negativeBound = LEFT_BOUND + WALL_RADIUS / 2\nconst positiveBound = RIGHT_BOUND - WALL_RADIUS / 2\n\n\nexport default function GenerateBlock() {\n    const mesh = useRef()\n\n    const texture = useTexture(blockTexture)\n\n    useLayoutEffect(() => {\n        texture.wrapS = texture.wrapT = MirroredRepeatWrapping\n        texture.repeat.set(0.9, 1.1)\n        texture.anistropy = 16\n        texture.rotation = 0.4\n    }, [texture])\n\n    const dogeShip = useStore(s => s.dogeShip)\n\n\n    const initial = useMemo(() => new Object3D(), [])\n    const block = useMemo(() => {\n\n        const temp = []\n        for (let i = 0; i < OBJECT_COUNT; i++) {\n            const x = randomInRange(negativeBound, positiveBound)\n            const y = randomInRange(-50, -300)\n            const z = -750 + randomInRange(-400, 400)\n\n            temp.push({ x, y, z })\n        }\n        return temp\n    }, [])\n\n\n    useFrame((state, delta) => {\n\n        block.forEach((b, i) => {\n            if (dogeShip.current) {\n                if (b.z - dogeShip.current.position.z > -15) {\n                    if (b.x - dogeShip.current.position.x > -15 ||\n                        b.x - dogeShip.current.position.x < 15 ||\n                        b.y - dogeShip.current.position.y > -15 ||\n                        b.y - dogeShip.current.position.y < 15) {\n\n                        const shipDistance = ThreeDistance(\n                            dogeShip.current.position.x,\n                            dogeShip.current.position.y,\n                            dogeShip.current.position.z,\n                            b.x, b.y, b.z)\n\n                        if (shipDistance < 15) {\n                            storeVariable.cubeSpeed = 0\n                            storeVariable.gameSpeed = 0\n                            storeVariable.gameOver = true\n                        }\n                    }\n                }\n\n                if (b.z - dogeShip.current.position.z > 15) {\n\n                    b.z = dogeShip.current.position.z - PLANE_SIZE + randomInRange(-200, 0)\n                    b.y = randomInRange(-50, -300)\n                    b.x = randomInRange(negativeBound, positiveBound)\n\n                }\n\n                if (b.y < CUBE_SIZE / 2) {\n                    if (b.y + delta * 100 > CUBE_SIZE / 2) {\n                        b.y = CUBE_SIZE / 2\n                    } else {\n                        b.y += delta * 100\n                    }\n                }\n            }\n\n            if (Math.random() < 0.5) {\n                b.x += Math.random() < .04 ? Math.sin(storeVariable.cubeSpeed * delta) * 400 : 0\n            } else {\n                b.x -= Math.random() < .04 ? Math.sin(storeVariable.cubeSpeed * delta) * 400 : 0\n            }\n\n            if (Math.random() < 0.5) {\n                b.y += Math.random() < .04 ? Math.sin(storeVariable.cubeSpeed * delta) * 400 : 0\n            } else {\n                b.y -= Math.random() < .04 ? Math.sin(storeVariable.cubeSpeed * delta) * 400 : 0\n            }\n\n            initial.position.set(\n                b.x,\n                b.y,\n                b.z\n            )\n\n            initial.updateMatrix()\n            mesh.current.setMatrixAt(i, initial.matrix)\n        })\n\n        mesh.current.instanceMatrix.needsUpdate = true\n    })\n\n    return (\n        <instancedMesh ref={mesh} args={[null, null, OBJECT_COUNT]}>\n            <boxBufferGeometry args={[CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]} />\n            <meshBasicMaterial ref={texture} color={'#ADD8E6'} map={texture} side={DoubleSide} />\n        </instancedMesh>\n    )\n}","import { useEffect, useRef, useState } from 'react'\nimport { addEffect } from '@react-three/fiber'\nimport { storeVariable, useStore } from '../useStore/useStore'\n\nimport '../Styles/hud.scss'\n\nconst getScore = () => `${storeVariable.gameScore.toFixed(0)}`\nconst getSpeed = () => `${(storeVariable.gameSpeed * 125).toFixed(0)}`\nconst getCoinValue = () => `${storeVariable.coinValue.toFixed(0)}`\n\nexport default function Hud() {\n    const gameOver = useStore(state => state.gameOver)\n    const gameStart = useStore(state => state.gameStart)\n    const displayCoin = useStore(state => state.displayCoin)\n\n    const [display, setDisplay] = useState(false)\n\n\n    let then = Date.now()\n\n    const scoreRef = useRef()\n    let currentScore = getScore()\n\n    const speedRef = useRef()\n    let currentSpeed = getSpeed()\n\n    const coinValueRef = useRef()\n    let currentCoinValue = getCoinValue()\n\n    useEffect(() => addEffect(() => {\n        const current = Date.now()\n\n        if (current - then > 30) {\n            if (scoreRef.current) { scoreRef.current.innerText = getScore() }\n            if (speedRef.current) { speedRef.current.innerText = getSpeed() }\n            if (coinValueRef.current) { coinValueRef.current.innerText = getCoinValue() }\n\n\n            then = current\n        }\n\n    }))\n\n    useEffect(() => {\n        if (gameStart || gameOver) {\n            setDisplay(true)\n        } else if (!gameStart) {\n            setDisplay(false)\n        }\n    }, [gameOver, gameStart,])\n\n    return display ? (\n        <div className='display'>\n            {displayCoin ? (\n                <div className='hud__center'>\n                    <div ref={coinValueRef} className='hud__center-text'>{currentCoinValue}</div>\n                </div>\n            ) : null}\n            <div className='hud__left'>\n                <div className='hud__left-text'>SCORE</div>\n                <div ref={scoreRef} className='hud__left-score'>{currentScore}</div>\n            </div>\n            <div className='hud__right'>\n                <div className='hud__right-text'>SPEED</div>\n                <div ref={speedRef} className='hud__right-speed'>{currentSpeed}</div>\n            </div>\n        </div>\n    ) : null\n}","export default __webpack_public_path__ + \"static/media/dogeBackgroundRevised.2b69af51.png\";","export default __webpack_public_path__ + \"static/media/wasdKeys.5526cd79.png\";","export default __webpack_public_path__ + \"static/media/arrowKeys.57ce713e.png\";","import * as React from 'react'\n\nconst styles = {\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: '4rem',\n        justifyContent: 'center',\n        transition: 'opacity 300ms ease',\n        zIndex: 1000,\n    },\n    inner: {\n        width: 306,\n        height: 46,\n        textAlign: 'center',\n        borderRadius: '5px',\n        boxShadow: '0 0 20px 0px #fe2079',\n        border: '3px solid #e1b303'\n    },\n    bar: {\n        width: '100%',\n        height: 40,\n        background: '#e1b303',\n        transition: 'transform 200ms',\n        transformOrigin: 'left center',\n        boxShadow: '0 0 20px 0px #e1b303'\n    },\n    data: {\n        textAlign: 'center',\n        marginTop: '2rem',\n        color: '#e1b303',\n        fontSize: '2em',\n        fontFamily: `Orbitron`,\n        whiteSpace: 'nowrap',\n        textShadow: '0 0 32px '\n    },\n}\nconst defaultDataInterpolation = (p) => `Initializing: ${p.toFixed(0)}%`\n\nexport default function Loader({ active, progress, dataInterpolation = defaultDataInterpolation }) {\n    const LoadingRef = React.useRef(0)\n    const rafRef = React.useRef(0)\n    const LoadedRef = React.useRef(null)\n\n    const updateProgress = React.useCallback(() => {\n        if (!LoadedRef.current) return\n        LoadingRef.current += (progress - LoadingRef.current) / 2\n        if (LoadingRef.current > 0.95 * progress || progress === 100) LoadingRef.current = progress\n        LoadedRef.current.innerText = dataInterpolation(LoadingRef.current)\n        if (LoadingRef.current < progress) rafRef.current = requestAnimationFrame(updateProgress)\n    }, [dataInterpolation, progress])\n\n    React.useEffect(() => {\n        updateProgress()\n        return () => cancelAnimationFrame(rafRef.current)\n    }, [updateProgress])\n\n    return (\n        <div style={{ ...styles.container, opacity: active ? 1 : 0 }}>\n            <div>\n                <div style={{ ...styles.inner }}>\n                    <div style={{ ...styles.bar, transform: `scaleX(${progress / 100})` }}></div>\n                    <div style={{ marginTop: '1.5rem' }}>\n                        <span ref={LoadedRef} style={{ ...styles.data }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { useStore } from '../useStore/useStore'\nimport dogeBackground from '../Assets/Texture/dogeBackgroundRevised.png'\nimport '../Styles/gameMenu.scss'\nimport wasdControls from '../Assets/Texture/wasdKeys.png'\nimport arrowControls from '../Assets/Texture/arrowKeys.png'\nimport { useProgress } from '@react-three/drei'\n\nimport Loading from './Loading'\n\nconst GameMenu = () => {\n\n    const [display, setDisplay] = useState(true)\n    const [opaque, setOpaque] = useState(true)\n    const [hasLoaded, setHasLoaded] = useState(false)\n    const { active, progress } = useProgress()\n\n\n    const gameStart = useStore(state => state.gameStart)\n    const gameOver = useStore(state => state.gameOver)\n    const isGameStart = useStore(state => state.isGameStart)\n\n    const [controlInfo, setControlInfo] = useState(false)\n\n    useEffect(() => {\n        if (gameStart || gameOver) {\n            setDisplay(false)\n        } else if (!gameStart) {\n            setDisplay(true)\n        }\n    }, [gameOver, gameStart, active])\n\n    useEffect(() => {\n        let t\n        if (hasLoaded === opaque) t = setTimeout(() => setOpaque(!hasLoaded), 300)\n        return () => clearTimeout(t)\n    }, [hasLoaded, opaque])\n\n    useEffect(() => {\n        if (progress >= 100) {\n            setHasLoaded(true)\n        }\n    }, [progress])\n\n    const handleGameStart = () => {\n        isGameStart(true)\n    }\n\n    const handleControlInfo = () => {\n        if (!controlInfo) {\n            setControlInfo(true)\n        } else if (controlInfo) {\n            setControlInfo(false)\n        }\n    }\n\n    return display ? (\n\n        <>\n            <div className=\"menu\">\n                <div className='menu__layer'>\n                    <img className=\"menu__logo\" src={dogeBackground} alt=\"Logo\"></img>\n                    {!hasLoaded ? (\n                        <Loading active={active} progress={progress} />\n                    ) : (\n                        <div className=\"menu__container\">\n                            <div className=\"menu__content\">\n                                <div className=\"menu__controls\">\n                                    <button className=\"menu__start\" onClick={handleGameStart}>START GAME</button>\n                                    <button className=\"menu__controls-description\" onClick={handleControlInfo}> VIEW CONTROLS TOGGLE</button>\n                                </div>\n                                <div className=\"menu__controls-container\">\n                                    <div className='menu__controls-image'>\n                                        {controlInfo ? <img className=\"menu__controls-wasd\" src={wasdControls} alt=\"wasd controls\" /> :\n                                            <img className=\"menu__controls-arrow\" src={arrowControls} alt=\"arrow keys controls\" />\n                                        }\n                                    </div>\n                                    <div className='menu__controls-text'>\n                                        {controlInfo ? <pre className='menu__controls-wasd-layout'>  W / S   FOR   &#8593;  / &#8595; <br />  A / D   FOR   &#8592; / &#8594; </pre> :\n                                            <pre className='menu__controls-arrow-layout'>USE ARROW KEYS</pre>\n                                        }\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div className=\"footer\">\n                                <div className=\"footer__content\">\n                                    <h3> Created by Andy Song </h3>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n\n    ) : null\n\n}\n\nexport default GameMenu","export default __webpack_public_path__ + \"static/media/dogeCoinIcon.7008ccc7.svg\";","import { useState, useEffect } from 'react'\nimport { useStore } from '../useStore/useStore'\nimport '../Styles/gameOver.scss'\nimport dogeCoin from '../Assets/Texture/dogeCoinIcon.svg'\n\n\n\nconst GameOver = () => {\n    const previousScores = localStorage.getItem('postScores') ? JSON.parse(localStorage.getItem('postScores')) :\n        [...Array(3).fill(0)]\n    const [display, setDisplay] = useState(false)\n    const [postScores, setPostScores] = useState(previousScores)\n\n    const gameOver = useStore(state => state.gameOver)\n    const gameScore = useStore(state => state.gameScore)\n\n    useEffect(() => {\n        gameOver ? setDisplay(true) : setDisplay(false)\n    }, [gameOver])\n\n    useEffect(() => {\n        if (gameOver) {\n            if (postScores.some(previousScores => previousScores < gameScore)) {\n                const compareScores = postScores.sort((a, b) => a - b)\n                compareScores[0] = gameScore.toFixed(0)\n                const descendingScores = compareScores.sort((a, b) => b - a)\n\n                setPostScores(descendingScores)\n                localStorage.setItem('postScores', JSON.stringify(descendingScores))\n            }\n        }\n    }, [gameScore, gameOver, postScores])\n\n    const handleRefresh = () => {\n        window.location.reload()\n    }\n\n\n    return display ? (\n        <div className=\"over\" >\n            <div className=\"over__container\">\n                <h1 className=\"over__title\">GAME OVER</h1>\n                <div className=\"over__score-container\">\n                    <div className='over__score-top'>\n                        <h2 className=\"over__current-score\">Your Score</h2>\n                        <h2 className=\"over__current-value pulsate-fwd\"> {gameScore.toFixed(0)}</h2>\n                    </div>\n                    <div className=\"over__score-bottom\">\n                        <h2 className=\"over__leaderboards\">LEADERBOARDS</h2>\n                        {postScores.map((p, i) => (\n                            <div className=\"over__leaderboards-list\">\n                                <div className=\"over__leaderboards-value\">{`${i + 1}:`}</div>\n                                <div className=\"over__leaderboards-score\">{p > 0 ? p : '-'}\n                                </div>\n                            </div>\n                        ))}\n                        <div className=\"over__restart-container\">\n                            <img onClick={handleRefresh} src={dogeCoin} alt=\"doge coin \" className=\"over__restart-button flip-vertical-right\"></img>\n                            <h2 className='over__restart-title'>PLAY AGAIN?</h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ) : null\n}\n\nexport default GameOver","import { MirroredRepeatWrapping, BackSide, DoubleSide, FrontSide } from 'three'\nimport React, { useRef, Suspense, useLayoutEffect } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport { useTexture } from '@react-three/drei'\nimport { useStore, storeVariable } from '../useStore/useStore'\n\n\n\nconst PLANE_SIZE = 1000\nconst GAME_SPEED_MULTIPLIER = 0.2\n\n\nconst TEXTURE_SIZE = PLANE_SIZE * 0.05 // 0.075\nconst MOVE_DISTANCE = PLANE_SIZE * 2\n\n\n\nfunction Terrain() {\n    const ground = useRef()\n    const groundTwo = useRef()\n\n    const planeTop = useRef()\n    const planeBot = useRef()\n    const planeLeft = useRef()\n    const planeRight = useRef()\n\n    const planeTwoTop = useRef()\n    const planeTwoBot = useRef()\n    const planeTwoLeft = useRef()\n    const planeTwoRight = useRef()\n\n    const dogeShip = useStore(s => s.dogeShip)\n    const difficultyScale = useStore(s => s.difficultyScale)\n\n\n\n    const moveCounter = useRef(1)\n    const lastMove = useRef(0)\n\n    useFrame(() => {\n\n        if (dogeShip.current) {\n            if (Math.round(dogeShip.current.position.z) + PLANE_SIZE * moveCounter.current + 10 < -10) {\n                if (moveCounter.current === 1 || Math.abs(dogeShip.current.position.z) - Math.abs(lastMove.current) <= 10) {\n                    if (moveCounter.current % 4 === 0) {\n                        difficultyScale()\n                        storeVariable.nextLevel++\n                        storeVariable.setSpeed += GAME_SPEED_MULTIPLIER\n                    }\n\n                    if (moveCounter.current % 2 === 0) {\n                        planeTwoBot.current.position.z -= MOVE_DISTANCE\n                        lastMove.current = planeTwoBot.current.position.z\n\n                        planeTwoTop.current.position.z -= MOVE_DISTANCE\n                        lastMove.current = planeTwoTop.current.position.z\n\n                        planeTwoLeft.current.position.z -= MOVE_DISTANCE\n                        lastMove.current = planeTwoLeft.current.position.z\n\n                        planeTwoRight.current.position.z -= MOVE_DISTANCE\n                        lastMove.current = planeTwoRight.current.position.z\n\n                    } else {\n                        planeBot.current.position.z -= MOVE_DISTANCE\n                        lastMove.current = planeBot.current.position.z\n\n                        planeTop.current.position.z -= MOVE_DISTANCE\n                        lastMove.current = planeTop.current.position.z\n\n                        planeLeft.current.position.z -= MOVE_DISTANCE\n                        lastMove.current = planeLeft.current.position.z\n\n                        planeRight.current.position.z -= MOVE_DISTANCE\n                        lastMove.current = planeRight.current.position.z\n\n                    }\n                }\n\n                moveCounter.current++\n            }\n        }\n    })\n    return (\n        <>\n            <group ref={ground}  >\n                <mesh // bottom wall\n                    ref={planeBot}\n                    receiveShadow\n                    visible\n                    rotation={[-Math.PI / 2, 0, 0]}\n                    position={[0, 0, -(PLANE_SIZE / 2)]}\n                >\n                    <planeBufferGeometry attach=\"geometry\" args={[600, PLANE_SIZE, 300, 8, 8]} />\n                    <meshStandardMaterial\n                        receiveShadow\n                        attach=\"material\"\n                        roughness={1}\n                        metalness={0}\n                        side={DoubleSide}\n                        color=\"blue\"\n                        // transparent={true}\n                        // opacity={0.1}\n                        wireframe={true}\n\n                    />\n                </mesh>\n\n                <mesh // Top wall\n                    ref={planeTop}\n                    receiveShadow\n                    visible\n                    rotation={[-Math.PI / 2, 0, 0]}\n                    position={[0, 300, -(PLANE_SIZE / 2)]}\n                >\n                    <planeBufferGeometry attach=\"geometry\" args={[600, PLANE_SIZE, 300, 8, 8]} />\n                    <meshStandardMaterial\n                        receiveShadow\n                        attach=\"material\"\n                        roughness={1}\n                        metalness={0}\n                        side={DoubleSide}\n                        color=\"blue\"\n                        // transparent={true}\n                        // opacity={0.4}\n                        wireframe={true}\n                    />\n                </mesh>\n\n                <mesh // Left wall\n                    ref={planeLeft}\n                    receiveShadow\n                    visible\n                    rotation={[0, -Math.PI / 2, 0]}\n                    position={[-300, 150, -(PLANE_SIZE / 2)]}\n                >\n                    <planeBufferGeometry attach=\"geometry\" args={[PLANE_SIZE, 300, 300, 8, 8]} />\n                    <meshStandardMaterial\n                        receiveShadow\n                        attach=\"material\"\n                        roughness={1}\n                        metalness={0}\n                        side={BackSide}\n                        color=\"blue\"\n                        // transparent={true}\n                        // opacity={0.4}\n                        wireframe={true}\n                    />\n                </mesh>\n                <mesh // Right wall\n                    ref={planeRight}\n                    receiveShadow\n                    visible\n                    rotation={[0, -Math.PI / 2, 0]}\n                    position={[300, 150, -(PLANE_SIZE / 2)]}\n                >\n                    <planeBufferGeometry attach=\"geometry\" args={[PLANE_SIZE, 300, 300, 8,]} />\n                    <meshStandardMaterial\n                        receiveShadow\n                        attach=\"material\"\n                        roughness={1}\n                        metalness={0}\n                        side={DoubleSide}\n                        color=\"blue\"\n                        // transparent={true}\n                        // opacity={0.4}\n                        wireframe={true}\n                    />\n\n                </mesh>\n            </group>\n\n            <group ref={groundTwo} >\n                <mesh // Bottom wall\n                    ref={planeTwoBot}\n                    receiveShadow\n                    visible\n                    rotation={[-Math.PI / 2, 0, 0]}\n                    position={[0, 0, -PLANE_SIZE - (PLANE_SIZE / 2)]}\n                >\n                    <planeBufferGeometry attach=\"geometry\" args={[600, PLANE_SIZE, 300, 8, 8]} />\n                    <meshStandardMaterial\n                        receiveShadow\n                        // emissiveMap={textures[1]}\n                        // map={textures[0]}\n                        attach=\"material\"\n                        roughness={1}\n                        metalness={0}\n                        side={DoubleSide}\n                        color=\"blue\"\n                        // transparent={true}\n                        // opacity={0.4}\n                        wireframe={true}\n                    />\n                </mesh>\n                <mesh //Top wall \n                    ref={planeTwoTop}\n                    receiveShadow\n                    visible\n                    rotation={[-Math.PI / 2, 0, 0]}\n                    position={[0, 300, -PLANE_SIZE - (PLANE_SIZE / 2)]}\n                >\n                    <planeBufferGeometry attach=\"geometry\" args={[600, PLANE_SIZE, 300, 8, 8]} />\n                    <meshStandardMaterial\n                        receiveShadow\n                        // emissiveMap={textures[1]}\n                        // map={textures[0]}\n                        attach=\"material\"\n                        roughness={1}\n                        metalness={0}\n                        side={BackSide}\n                        color=\"blue\"\n                        // transparent={true}\n                        // opacity={0.4}\n                        wireframe={true}\n                    />\n                </mesh>\n                <mesh // left wall\n                    ref={planeTwoLeft}\n                    receiveShadow\n                    visible\n                    rotation={[0, -Math.PI / 2, 0]}\n                    position={[-300, 150, -PLANE_SIZE - (PLANE_SIZE / 2)]}\n                >\n                    <planeBufferGeometry attach=\"geometry\" args={[PLANE_SIZE, 300, 300, 8, 8]} />\n                    <meshStandardMaterial\n                        receiveShadow\n                        // emissiveMap={textures[1]}\n                        // map={textures[0]}\n                        attach=\"material\"\n                        roughness={1}\n                        metalness={0}\n                        side={BackSide}\n                        color=\"blue\"\n                        // transparent={true}\n                        // opacity={0.4}\n                        wireframe={true}\n                    />\n                </mesh>\n                <mesh // right wall\n                    ref={planeTwoRight}\n                    receiveShadow\n                    visible\n                    rotation={[0, -Math.PI / 2, 0]}\n                    position={[300, 150, -PLANE_SIZE - (PLANE_SIZE / 2)]}\n                >\n                    <planeBufferGeometry attach=\"geometry\" args={[PLANE_SIZE, 300, 300, 8, 8]} />\n                    <meshStandardMaterial\n                        receiveShadow\n                        // emissiveMap={textures[1]}\n                        // map={textures[0]}\n                        attach=\"material\"\n                        roughness={1}\n                        metalness={0}\n                        side={DoubleSide}\n                        color=\"blue\"\n                        // transparent={true}\n                        // opacity={0.4}\n                        wireframe={true}\n                    />\n                </mesh>\n            </group>\n        </>\n    )\n}\n\nfunction LoadingGround() {\n    return (\n        <mesh\n            receiveShadow\n            visible\n            position={[0, 0, 0]}\n            rotation={[-Math.PI / 2, 0, 0]}\n        >\n            <planeBufferGeometry attach=\"geometry\" args={[5000, 5000, 1, 1]} />\n            <meshStandardMaterial\n                receiveShadow\n                attach=\"material\"\n                color={`black`}\n                roughness={1}\n                metalness={0}\n            />\n        </mesh>\n    )\n}\n\nexport default function TerrainGround() {\n\n    return (\n        <Suspense fallback={<LoadingGround />}>\n            <Terrain />\n        </Suspense>\n    )\n}","import React, { useRef, useMemo, useEffect } from \"react\";\nimport { useFrame, useThree, extend } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\n\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass'\n\n\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass, FilmPass })\n\n\n\n\n\n\n\nexport default function Effect() {\n    const composer = useRef()\n    const { scene, gl, size, camera } = useThree()\n    const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [size])\n    useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n    useFrame(() => composer.current.render(), 1)\n    return (\n        <effectComposer ref={composer} args={[gl]}>\n            <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n            <unrealBloomPass attachArray=\"passes\" args={[aspect, 0.6, 1, 0.4]} />\n        </effectComposer>\n    )\n}","export default __webpack_public_path__ + \"static/media/doge_coin.8e0d4090.png\";","// import { MirroredRepeatWrapping, Object3D, clock } from 'three'\nimport * as THREE from 'three'\nimport { useRef, useMemo, useLayoutEffect } from 'react'\nimport { extend, useFrame } from '@react-three/fiber'\nimport { Circle, useTexture } from '@react-three/drei'\n\nimport coinTexture from '../Assets/Texture/doge_coin.png'\nimport { storeVariable, useStore } from '../useStore/useStore'\nimport GameOver from './GameOver'\n\n\nconst PLANE_SIZE = 1000\nconst LEFT_BOUND = (-PLANE_SIZE / 2) * 0.6\nconst RIGHT_BOUND = (PLANE_SIZE / 2) * 0.6\nconst Coin_SIZE = 10\nconst Coin_AMOUNT = 6\nconst WALL_RADIUS = 40\n\nconst randomInRange = (from, to) => Math.floor(Math.random() * (to - from + 1)) - to\n\nfunction ThreeDistance(p1x, p1y, p1z, p2x, p2y, p2z) {\n    const a = p2x - p1x;\n    const b = p2y - p1y;\n    const c = p2z - p1z\n\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\nconst negativeBound = LEFT_BOUND + WALL_RADIUS / 2.1\nconst positiveBound = RIGHT_BOUND - WALL_RADIUS / 2.1\n\n\nexport default function GenerateCoin() {\n    const mesh = useRef()\n    const coinRef = useRef()\n\n    const texture = useTexture(coinTexture)\n\n    const gameOver = useStore(state => state.gameOver)\n    const setDisplayCoin = useStore(s => s.setDisplayCoin)\n\n    useLayoutEffect(() => {\n        texture.wrapS = texture.wrapT = THREE.MirroredRepeatWrapping\n        texture.repeat.set(1, 1)\n        texture.anistropy = 16\n        texture.rotation = 0\n    }, [texture])\n\n    const dogeShip = useStore(s => s.dogeShip)\n\n\n    const initial = useMemo(() => new THREE.Object3D(), [])\n    const coin = useMemo(() => {\n\n        const temp = []\n        for (let i = 0; i < Coin_AMOUNT; i++) {\n            const x = randomInRange(negativeBound, positiveBound)\n            const y = randomInRange(-50, -250)\n            const z = -750 + randomInRange(-400, 400)\n\n            temp.push({ x, y, z })\n        }\n        return temp\n    }, [])\n\n\n    useFrame(({ state, delta, clock }) => {\n\n        // mesh.current.scale.y += Math.sin(clock.getElapsedTime()) / 1200\n\n\n\n        coin.forEach((c, i,) => {\n            if (dogeShip.current) {\n                if (c.z - dogeShip.current.position.z > -15) { // distance function if the ship is too far away\n                    if (c.x - dogeShip.current.position.x > -15 ||\n                        c.x - dogeShip.current.position.x < 15 ||\n                        c.y - dogeShip.current.position.y > -15 ||\n                        c.y - dogeShip.current.position.y < 15) {\n                        const shipDistance = ThreeDistance(\n                            dogeShip.current.position.x,\n                            dogeShip.current.position.y,\n                            dogeShip.current.position.z,\n                            c.x, c.y, c.z)\n\n                        if (shipDistance < 20) {\n\n                            if (storeVariable.gameSpeed <= 1.3) {\n\n                                setDisplayCoin(true)\n                                storeVariable.coinCount += 1000\n                                storeVariable.coinValue = 1000\n                                setTimeout(() => {\n                                    setDisplayCoin(false)\n                                }, 1000)\n                            }\n\n                            else if (storeVariable.gameSpeed >= 1.8) {\n                                setDisplayCoin(true)\n                                storeVariable.coinCount += 10000\n                                storeVariable.coinValue = 10000\n                                setTimeout(() => {\n                                    setDisplayCoin(false)\n                                }, 1000)\n                            }\n                            else if (storeVariable.gameSpeed <= 1.4) {\n                                setDisplayCoin(true)\n                                storeVariable.coinCount += 5000\n                                storeVariable.coinValue = 5000\n                                setTimeout(() => {\n                                    setDisplayCoin(false)\n                                }, 1000)\n                            }\n\n\n                        }\n\n\n\n                        if (shipDistance < 19) {\n                            c.x = (storeVariable.cubeSpeed * delta) * 1000\n\n                        }\n\n                        if (gameOver) {\n                            storeVariable.coinCount = 1\n                        }\n                    }\n                }\n\n\n                if (c.z - dogeShip.current.position.z > 15) {\n\n                    c.z = dogeShip.current.position.z - PLANE_SIZE + randomInRange(-200, 0)\n                    c.y = randomInRange(-50, -300)\n                    c.x = randomInRange(negativeBound, positiveBound)\n\n                }\n\n                if (c.y < Coin_SIZE / 2) {\n                    if (c.y + delta * 100 > Coin_SIZE / 2) {\n                        c.y = Coin_SIZE / 2\n                    } else {\n                        c.y += delta * 100\n                    }\n                }\n            }\n\n\n            initial.position.set(\n                c.x,\n                c.y,\n                c.z\n            )\n\n            initial.updateMatrix()\n            mesh.current.setMatrixAt(i, initial.matrix)\n\n\n        })\n\n        mesh.current.instanceMatrix.needsUpdate = true\n    })\n\n    return (\n        <instancedMesh ref={mesh} args={[null, null, Coin_AMOUNT]}>\n            {/* <boxBufferGeometry args={[Coin_SIZE, Coin_SIZE, Coin_SIZE]} />\n            <meshBasicMaterial ref={texture} color={'white'} map={texture} /> */}\n            <circleBufferGeometry args={[10, 16, 0]} />\n            <meshBasicMaterial ref={texture} color={'#FFD700'} map={texture} />\n        </instancedMesh>\n    )\n}","import { Canvas } from '@react-three/fiber'\nimport { Suspense } from 'react'\nimport { Preload } from '@react-three/drei'\nimport { useStore } from './useStore/useStore'\n\nimport State from './Components/State'\n\n\nimport GameControls from './Components/GameControls'\nimport Skybox from './Components/SkyBox'\nimport Ship from './Components/Ship'\nimport MapBoundary from './Components/MapBoundary'\nimport Obstacles from './Components/Obstacles'\nimport Hud from './Components/Hud'\nimport GameMenu from './Components/GameMenu'\nimport GameOver from './Components/GameOver'\nimport Terrain from './Components/Terrain'\nimport Bloom from './Components/Bloom'\nimport Coin from './Components/Coin'\n\nfunction App() {\n  const directionalLight = useStore((s) => s.directionalLight)\n  const directionalLight2 = useStore((s) => s.directionalLight2)\n  return (\n    <>\n      <Canvas mode=\"concurrent\" dpr={[1, 1.5]}>\n        <Suspense fallback={null}>\n          <State />\n          <Bloom />\n          <Skybox />\n          <directionalLight\n            ref={directionalLight}\n            position={[Math.PI, Math.PI, 0]}\n            intensity={3}\n            color={'#5aaccc'}\n          />\n          <directionalLight\n            ref={directionalLight2}\n            position={[-Math.PI, -Math.PI, 0]}\n            intensity={3}\n            color={'#5aaccc'}\n          />\n          <ambientLight\n            intensity={0.5}\n            color={'#5aaccc'}\n          />\n          <Ship />\n          < MapBoundary />\n          <Obstacles />\n          <Coin />\n          <Terrain />\n          <GameControls />\n          <Preload all />\n        </Suspense>\n      </Canvas>\n      <Hud />\n      <GameMenu />\n      <GameOver />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Styles/index.scss'\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n\n"],"sourceRoot":""}